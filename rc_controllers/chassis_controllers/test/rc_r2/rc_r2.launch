<!-- rc_r2.luanch -->
<launch>
    <arg name="robot_type" default="rc_r2" />
    <arg name="robot_namespace" default="robot1" />

    <rosparam param="robot_namespace" value="$(arg robot_namespace)" />
    <rosparam file="$(find rc_gazebo)/config/actions.yaml" command="load" if="true"  namespace="$(arg robot_namespace)"/>
    <rosparam file="$(find chassis_controllers)/test/$(arg robot_type)/$(arg robot_type).yaml" command="load" />

    <!-- 加载八期r2四全向轮底盘控制器、关节状态观测器、action定位模块控制器 -->
    <!-- <group ns="$(arg robot_namespace)"> -->
        <!-- 加载底盘控制器、关节状态观测器、action定位模块控制器 -->
        <node name="controller_spawner" pkg="controller_manager" type="controller_manager" output="screen" namespace="$(arg robot_namespace)"
            args="spawn
            chassis_controller
            action_controller
            joint_state_controller">
            <!-- <param name="robot_namespace" value="$(arg robot_namespace)" />
            <rosparam file="$(find chassis_controllers)/test/rc_r2/rc_r2.yaml" /> -->
        </node>
    <!-- </group> -->
    <!-- <group ns="$(arg robot_namespace)">
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="robot_description" command="$(find xacro)/xacro '$(find rc_description)/urdf/rc_r2/chassis.urdf.xacro' robot_namespace:=$(arg robot_namespace) use_sim:=$(arg use_sim)" />
            <param name="publish_frequency" type="double" value="50.0" />
        </node>
    </group> -->
</launch>